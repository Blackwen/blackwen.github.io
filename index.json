[{"content":"","date":"26 October 2023","permalink":"/tags/ielts/","section":"Tags","summary":"","title":"IELTS"},{"content":"先看题目\nThe most important aim of science should be to improve people\u0026rsquo;s lives. To what extent do you agree or disagree with this statement?\n通过 To what extent do you agree or disagree 确定他是一个 观点类题目，所以需要看 题目主要讨论的观点是什么\n这个题目主要讨论的观点是 The most important aim of science should be to improve people's lives. 大意为科学最重要的目的应该是改善人们的生活。所以在表达我自己的观点时，应该围绕这个题目去讲，他问我们同意还是不同意，所以我们可以选择同意这个观点或者否定这个观点。\nAgree 🟢 Disagree 🔴 Reason 1️⃣科学家研发新的药品，使一些疾病能够被治愈，更少的人因为疾病死去。2️⃣科学研究的一些技术，能够保护环境，让人们生活的越来越好。3️⃣\u0026hellip;\u0026hellip; 不同意的原因不是很好写，不方便后期的拓展。 所以我们在选择观点时，可以在脑海中拟出一个向这样的表格，可以帮助我们更好的进行下一步，也就是写观点。\n通过观察这个表格，我们便可以确定我们要写的观点了。\n","date":"26 October 2023","permalink":"/posts/ielts-write-test1/","section":"Posts","summary":"先看题目","title":"IELTS Study Notes-WRITING TASK2审题篇"},{"content":"","date":"26 October 2023","permalink":"/posts/","section":"Posts","summary":"","title":"Posts"},{"content":"","date":"26 October 2023","permalink":"/tags/","section":"Tags","summary":"","title":"Tags"},{"content":"","date":"26 October 2023","permalink":"/","section":"Vinkon's Blog","summary":"","title":"Vinkon's Blog"},{"content":"","date":"26 October 2023","permalink":"/tags/%E5%AD%A6%E4%B9%A0/","section":"Tags","summary":"","title":"学习"},{"content":"","date":"26 October 2023","permalink":"/tags/%E7%AC%94%E8%AE%B0/","section":"Tags","summary":"","title":"笔记"},{"content":"","date":"16 September 2023","permalink":"/tags/android%E5%BC%80%E5%8F%91/","section":"Tags","summary":"","title":"Android开发"},{"content":"","date":"16 September 2023","permalink":"/tags/jetpack-compose/","section":"Tags","summary":"","title":"Jetpack-Compose"},{"content":"","date":"16 September 2023","permalink":"/posts/jetpack-compose-dialogs/","section":"Posts","summary":"","title":"JetpackCompose组件介绍-Dialogs"},{"content":"","date":"16 September 2023","permalink":"/tags/kotlin/","section":"Tags","summary":"","title":"Kotlin"},{"content":"","date":"13 September 2023","permalink":"/posts/jetpack-compose-chips/","section":"Posts","summary":"","title":"JetpackCompose组件介绍-Chips"},{"content":"","date":"12 September 2023","permalink":"/posts/jetpack-compose-checkbox/","section":"Posts","summary":"","title":"JetpackCompose组件介绍-Checkbox"},{"content":" 本题出自《剑桥雅思官方真题集18》 READING\n阅读原文 # 引言 # In Paris, urban farmers are trying a soil-free approach to agriculture that uses less space and fewer resources. Could it help cities face the threats to our food supplies?\n第一段 # On top of a striking new exhibition hall in southern Paris, the world’s largest urban rooftop farm has started to bear fruit. Strawberries that are small, intensely flavored and resplendently red sprout abundantly from large plastic tubes. Peer inside and you see the tubes are completely hollow, the roots of dozens of strawberry plants dangling down inside them. From identical vertical tubes nearby burst row upon row of lettuces; near those are aromatic herbs, such as basil, sage and peppermint. Opposite, in narrow, horizontal trays packed not with soil but with coconut fibre, grow cherry tomatoes, shiny aubergines and brightly coloured chards.\n第二段 # Pascal Hardy, an engineer and sustainable development consultant, began experimenting with vertical farming and aeroponic growing towers – as the soil-free plastic tubes are known – on his Paris apartment block roof five years ago. The urban rooftop space above the exhibition hall is somewhat bigger: 14,000 square metres and almost exactly the size of a couple of football pitches. Already, the team of young urban farmers who tend it have picked, in one day, 3,000 lettuces and 150 punnets of strawberries. When the remaining two thirds of the vast open area are in production, 20 staff will harvest up to 1,000 kg of perhaps 35 different varieties of fruit and vegetables, every day.”We’re not ever, obviously, going to feed the whole city this way,’ cautions Hardy.’In the urban environment, you’re working with very significant practical constraints, clearly, on what you can do and where. But if enough unused space can be developed like this, there’s no reason why you shouldn’t eventually target maybe between 5% and 10% of consumption.’\n第三段 # Perhaps most significantly, however, this is a real-life showcase for the work of Hardy’s flourishing urban agriculture consultancy, Agripolis, which is currently fielding enquiries from around the world to design, build and equip a new breed of soil-free inner-city farm.”The method’s advantages are many,’ he says.”First, I don’t much like the fact that most of the fruit and vegetables we eat have been treated with something like 17 different pesticides, or that the intensive farming techniques that produced them are such huge generators of greenhouse gases. I don’t much like the fact, either, that they’ve travelled an average of 2,000 refrigerated kilometres to my plate, that their quality is so poor, because the varieties are selected for their capacity to withstand such substantial journeys, or that 80% of the price I pay goes to wholesalers and transport companies, not the producers.’\n第四段 # Produce grown using this soil-free method, on the other hand – which relies solely on a small quantity of water, enriched with organic nutrients, pumped around a closed circuit of pipes, towers and trays – is ‘produced up here, and sold locally, just down there. This article is from laokaoya website. It barely travels at all,’ Hardy says.”You can select crop varieties for their flavour, not their resistance to the transport and storage chain, and you can pick them when they’re really at their best, and not before.’No soil is exhausted, and the water that gently showers the plants’ roots every 12 minutes is recycled, so the method uses 90% less water than a classic intensive farm for the same yield.\n第五段 # Urban farming is not, of course, a new phenomenon. Inner-city agriculture is booming from Shanghai to Detroit and Tokyo to Bangkok. Strawberries are being grown in disused shipping containers, mushrooms in underground car parks. Aeroponic farming, he says, is ‘virtuous’. The equipment weighs little, can be installed on almost any flat surface and is cheap to buy: roughly €10o to €15o per square metre. It is cheap to run, too, consuming a tiny fraction of the electricity used by some techniques.\n第六段 # Produce grown this way typically sells at prices that, while generally higher than those of classic intensive agriculture, are lower than soil-based organic growers. There are limits to what farmers can grow this way, of course, and much of the produce is suited to the summer months.‘Root vegetables we cannot do, at least not yet,’ he says.’Radishes are OK, but carrots, potatoes, that kind of thing – the roots are simply too long. Fruit trees are obviously not an option. And beans tend to take up a lot of space for not much return.’ Nevertheless, urban farming of the kind being practised in Paris is one part of a bigger and fast-changing picture that is bringing food production closer to our lives.\n分析句子大意 # 引言 # 先看单词，大部分都能认出来\nurban 城镇的\napproach 接近，靠近，临近，方式，方法\nagriculture 农业的\nthreat 恐吓，威胁\nsupply 供给，供应\n大概意思是正在讲述\n巴黎城市的农民尝试一种：空间更小，消耗资源更少的无土农业，并且问这种方式能否帮助城市应对食品供应的威胁\n第一段 # 第二段 # 第三段 # ","date":"9 September 2023","permalink":"/posts/ielts-notes-passage1/","section":"Posts","summary":"本题出自《剑桥雅思官方真题集18》 READING","title":"IELTS Study Notes-PASSAGE1"},{"content":" 此图片来自Material You 官网\n本着今日事，今日毕的原则，决定把Top app bar也顺带记录下 # 本文章将会使用Jetpack Compose仿造Material You官网所出示4个Bar的样式\nCenter-aligned # 使用CenterAlignedTopAppBar组件\nfun mainTopAppBar(){ Column { CenterAlignedTopAppBar ( // elevation = 4.dp, title = { Text( \u0026#34;Title Large\u0026#34; ) }, // backgroundColor = MaterialTheme.colors.primarySurface, navigationIcon = { IconButton(onClick = {/* Do Something*/ }) { Icon(Icons.Filled.Menu, \u0026#34;Menu\u0026#34;) } }, actions = { IconButton(onClick = {/* Do Something*/ }) { Icon(Icons.Filled.PersonPin, \u0026#34;PersonPin\u0026#34;) } }) // Screen } } Small # 使用TopAppBar组件\nfun mainTopAppBar() { Column { TopAppBar( // elevation = 4.dp, title = { Text( \u0026#34;Title Large\u0026#34; ) }, // backgroundColor = MaterialTheme.colors.primarySurface, navigationIcon = { IconButton(onClick = {/* Do Something*/ }) { Icon(Icons.Filled.ArrowBack, null) } }, actions = { IconButton(onClick = {/* Do Something*/ }) { Icon(Icons.Filled.AttachFile, \u0026#34;AttachFile\u0026#34;) } IconButton(onClick = {/* Do Something*/ }) { Icon(Icons.Filled.Today, \u0026#34;Today\u0026#34;) } IconButton(onClick = {/* Do Something*/ }) { Icon(Icons.Filled.MoreVert, \u0026#34;MoreVert\u0026#34;) } }) // Screen } } Medium # 使用MediumTopAppBar组件\nfun mainTopAppBar() { Column { MediumTopAppBar( // elevation = 4.dp, title = { Text( \u0026#34;Headline Small\u0026#34; ) }, // backgroundColor = MaterialTheme.colors.primarySurface, navigationIcon = { IconButton(onClick = {/* Do Something*/ }) { Icon(Icons.Filled.ArrowBack, null) } }, actions = { IconButton(onClick = {/* Do Something*/ }) { Icon(Icons.Filled.AttachFile, \u0026#34;AttachFile\u0026#34;) } IconButton(onClick = {/* Do Something*/ }) { Icon(Icons.Filled.Today, \u0026#34;Today\u0026#34;) } IconButton(onClick = {/* Do Something*/ }) { Icon(Icons.Filled.MoreVert, \u0026#34;MoreVert\u0026#34;) } }) // Screen } } Large # 使用LargeTopAppBar组件\nfun TopAppBarSample() { Column { LargeTopAppBar( // elevation = 4.dp, title = { Text( \u0026#34;Meadline Large\u0026#34; ) }, // backgroundColor = MaterialTheme.colors.primarySurface, navigationIcon = { IconButton(onClick = {/* Do Something*/ }) { Icon(Icons.Filled.ArrowBack, null) } }, actions = { IconButton(onClick = {/* Do Something*/ }) { Icon(Icons.Filled.AttachFile, \u0026#34;AttachFile\u0026#34;) } IconButton(onClick = {/* Do Something*/ }) { Icon(Icons.Filled.Today, \u0026#34;Today\u0026#34;) } IconButton(onClick = {/* Do Something*/ }) { Icon(Icons.Filled.MoreVert, \u0026#34;MoreVert\u0026#34;) } }) // Screen } } 几种TopBar的参数都是差不多的，需要更改为其他Bar也很方便，只需要修改名称\n","date":"28 August 2023","permalink":"/posts/jetpack-compose-top-app-bar/","section":"Posts","summary":"此图片来自Material You 官网","title":"JetpackCompose组件介绍-Top app bar"},{"content":" 此图片来自Material You 官网\nButtom app bar 只是一个载体，里面的内容是可以自定义的。 # 本文章按照Material You官网给出的要求来\n底部应用栏在移动屏幕底部显示导航和关键操作。\n我们先观察Buttom app bar里面的组成，从左至右依次是四个IconButton，最右边则是一个FloatingActionButton\n首先添加一个Buttom app bar组件\n@Composable fun ButtomAppBar( ) 在里面添加四个IconButton，你也可以添加其他的东西。\n@Composable fun ButtomAppBar( actions = { IconButton(onClick = { /* doSomething() */ }) { Icon( Icons.Filled.Search, contentDescription = \u0026#34;Description\u0026#34; ) } IconButton(onClick = { /* doSomething() */ }) { Icon( Icons.Filled.DeleteOutline, contentDescription = \u0026#34;Description\u0026#34;, ) } IconButton(onClick = { /* doSomething() */ }) { Icon( Icons.Outlined.Archive, contentDescription = \u0026#34;Description\u0026#34;, ) } IconButton(onClick = { /* doSomething() */ }) { Icon( Icons.Filled.TurnRight, contentDescription = \u0026#34;Description\u0026#34;, ) } }, ) 再添加一个FloatingActionButton\nfloatingActionButton = { FloatingActionButton( onClick = { /* do something */ }, containerColor = BottomAppBarDefaults.bottomAppBarFabColor, elevation = FloatingActionButtonDefaults.bottomAppBarFabElevation() ) { Icon(Icons.Filled.Add, \u0026#34;Description\u0026#34;) } } ","date":"28 August 2023","permalink":"/posts/jetpack-compose-buttom-app-bar/","section":"Posts","summary":"此图片来自Material You 官网","title":"JetpackCompose组件介绍-Buttom app bar"},{"content":" 此图片来自Material You 官网\nElevatedCard 阴影卡片 # ElevatedCard( elevation = CardDefaults.cardElevation( defaultElevation = 6.dp ), modifier = Modifier .size(width = 240.dp, height = 80.dp) .padding(8.dp), onClick = {}, ) { } FilledCard 填充卡片 # Card( colors = CardDefaults.cardColors( containerColor = MaterialTheme.colorScheme.primary, ), modifier = Modifier .size(width = 240.dp, height = 80.dp) .padding(8.dp), onClick = {}, ) { } Outlined 边框卡片 # OutlinedCard( modifier = Modifier .size(width = 240.dp, height = 80.dp) .padding(8.dp), onClick = {}, ) { } ","date":"26 August 2023","permalink":"/posts/jetpack-compose-some-cards/","section":"Posts","summary":"此图片来自Material You 官网","title":"JetpackCompose组件介绍-Card"},{"content":" 此图片来自Material You官网\nElevatedButton 阴影按钮(带图标) # ElevatedButton(onClick = { }) { Icon( imageVector = Icons.Default.Add, contentDescription = \u0026#34;Test\u0026#34;, modifier = Modifier.size(16.dp) ) Spacer(modifier = Modifier.width(8.dp)) Text(text = \u0026#34;New a Word\u0026#34;) } Button 按钮(默认) # Button(onClick = { }) { Text(text = \u0026#34;Show All\u0026#34;) } FilledTonalButton 填充色调按钮 # FilledTonalButton(onClick = { }) { Text(text = \u0026#34;Visit site\u0026#34;) } OutlinedButton 边框按钮 # OutlinedButton(onClick = { }) { Text(text = \u0026#34;Enable\u0026#34;) } TextButton 文本按钮 # TextButton(onClick = { }) { Text(text = \u0026#34;Text\u0026#34;) } IconButton 图标按钮 # IconButton(onClick = { }) { Icon(imageVector = Icons.Default.StarBorder, contentDescription = \u0026#34;Test\u0026#34;) } FloatingActionButton 浮动操作按钮 # FloatingActionButton(onClick = { }) { Icon(imageVector = Icons.Default.Add, contentDescription = \u0026#34;Test\u0026#34;, modifier = Modifier.size(24.dp)) Spacer(modifier = Modifier.width(8.dp)) } ExtendedFloatingActionButton 扩展浮动操作按钮 # ExtendedFloatingActionButton(onClick = { }) { Icon(imageVector = Icons.Default.Add, contentDescription = \u0026#34;Test\u0026#34;, modifier = Modifier.size(24.dp)) Spacer(modifier = Modifier.width(8.dp)) Text(text = \u0026#34;Test\u0026#34;) } ","date":"24 August 2023","permalink":"/posts/jetpack-compose-all-button/","section":"Posts","summary":"此图片来自Material You官网","title":"JetpackCompose组件介绍-Button"},{"content":"打开Android Studio(IntelliJ IDEA)，新建一个Kotlin Android项目\n创建完毕后，打开app:build.gradle.kts，添加以下依赖\nval composeBom = platform(\u0026#34;androidx.compose:compose-bom:2023.01.00\u0026#34;) implementation(composeBom) androidTestImplementation(composeBom) // Choose one of the following: // Material Design 3 implementation(\u0026#34;androidx.compose.material3:material3\u0026#34;) // or Material Design 2 implementation(\u0026#34;androidx.compose.material:material\u0026#34;) // or skip Material Design and build directly on top of foundational components implementation(\u0026#34;androidx.compose.foundation:foundation\u0026#34;) // or only import the main APIs for the underlying toolkit systems, // such as input and measurement/layout implementation(\u0026#34;androidx.compose.ui:ui\u0026#34;) // Android Studio Preview support implementation(\u0026#34;androidx.compose.ui:ui-tooling-preview\u0026#34;) debugImplementation(\u0026#34;androidx.compose.ui:ui-tooling\u0026#34;) // UI Tests androidTestImplementation(\u0026#34;androidx.compose.ui:ui-test-junit4\u0026#34;) debugImplementation(\u0026#34;androidx.compose.ui:ui-test-manifest\u0026#34;) // Optional - Included automatically by material, only add when you need // the icons but not the material library (e.g. when using Material3 or a // custom design system based on Foundation) implementation(\u0026#34;androidx.compose.material:material-icons-core\u0026#34;) // Optional - Add full set of material icons implementation(\u0026#34;androidx.compose.material:material-icons-extended\u0026#34;) // Optional - Add window size utils implementation(\u0026#34;androidx.compose.material3:material3-window-size-class\u0026#34;) // Optional - Integration with activities implementation(\u0026#34;androidx.activity:activity-compose:1.6.1\u0026#34;) // Optional - Integration with ViewModels implementation(\u0026#34;androidx.lifecycle:lifecycle-viewmodel-compose:2.5.1\u0026#34;) // Optional - Integration with LiveData implementation(\u0026#34;androidx.compose.runtime:runtime-livedata\u0026#34;) // Optional - Integration with RxJava implementation(\u0026#34;androidx.compose.runtime:runtime-rxjava2\u0026#34;) 参考 Quick start\n","date":"22 August 2023","permalink":"/posts/set-up-jetpack-compose/","section":"Posts","summary":"打开Android Studio(IntelliJ IDEA)，新建一个Kotlin Android项目","title":"Jetpack Compose入门笔记-配置依赖"},{"content":" Github仓库\nKotlin中文文档\nBlackwen/Kotlin-docs-cn 使用mdbook搭建的Kotlin中文文档 HTML 0 0 欢迎各位访问该文档，如果在阅读过程中出现问题，请发送邮箱到bettermemory@lilkon.cn\n日志 # 20230823\n优化语序\n20230821\n完成 基本语法 翻译\n","date":"21 August 2023","permalink":"/posts/kotlin-docs-cn/","section":"Posts","summary":"Github仓库","title":"Kotlin中文文档"},{"content":"","date":"21 August 2023","permalink":"/tags/%E6%96%87%E6%A1%A3/","section":"Tags","summary":"","title":"文档"},{"content":"","date":"12 August 2023","permalink":"/tags/oh-my-zsh/","section":"Tags","summary":"","title":"oh-my-zsh"},{"content":" 辅助向 # archlinux # 该插件简化了使用 ArchLinux 的包管理器时的组合命令，如\nAlias Command Description pacin sudo pacman -S Install packages from the repositories pacins sudo pacman -U Install a package from a local file pacinsd sudo pacman -S --asdeps Install packages as dependencies of another package paclean sudo pacman -Sc Clean out old and unused caches and packages 更多可前往README查看\nwd # 该插件约等于一个终端上的目录书签，使用中，我们可以将自己常用的目录使用\nwd add Name 命令来添加当前目录，下次在需要跳转该目录时直接使用\nwd Name 命令即可成功跳转\nweb-search # 可以快速调用搜索引擎搜索，如\ngoogle oh-my-zsh # 使用Google搜索 oh-mu-zsh bing oh-my-zsh # 使用 Bing 搜索 oh-my-zsh sudo # 双击 Esc 键快速在命令前添加 sudo\nz # 快速跳转到之前使用过的目录\n# 例如，我使用 cd 访问过 ～/Desktop 和 ~/.config/Chrome # 下次访问可以直接使用 z 加正则表达式匹配来快速访问 z De `or` z Desk z Chro `or` z Ch 美化向 # hitokoto # 随机一言\n","date":"12 August 2023","permalink":"/posts/omz-plugins/","section":"Posts","summary":"辅助向 # archlinux # 该插件简化了使用 ArchLinux 的包管理器时的组合命令，如","title":"Oh-my-zsh 插件推荐"},{"content":"","date":"12 August 2023","permalink":"/tags/%E6%8F%92%E4%BB%B6%E6%8E%A8%E8%8D%90/","section":"Tags","summary":"","title":"插件推荐"},{"content":" 视频封面 \u0026amp; 软件宣传 \u0026amp; 海报 \u0026amp; UI 设计 # 总览 # 高考海报 # 2022年右 点击查看抖音分享\n2023年左 点击查看抖音分享\n视频封面 \u0026amp; 软件宣传 # 我的世界生存小屋，适合新手\n点击查看Bilibili视频\n三年了， 初中生打造一个免费聚合音乐App(安卓 苹果 PC兼用）\n点击查看Bilibili视频\n【Helix】2023年了，你还不会配置Helix？来和我从0开始安装配置Helix吧！\n点击查看Bilibili视频\n【LOLCODE】像撸猫一样的 Coding 体验！！\n点击查看Bilibili视频\n【HUGO】Blowfish 主题安装及配置\n点击查看文章\n","date":"31 July 2023","permalink":"/posts/design-portfolio/","section":"Posts","summary":"视频封面 \u0026amp; 软件宣传 \u0026amp; 海报 \u0026amp; UI 设计 # 总览 # 高考海报 # 2022年右 点击查看抖音分享","title":"2022-2023 设计作品集"},{"content":"","date":"31 July 2023","permalink":"/tags/%E8%AE%BE%E8%AE%A1/","section":"Tags","summary":"","title":"设计"},{"content":" 我的爱好 # Linux , Android and 阅读\n我正在开发的项目 # Android # BetterMemory/BetterMemory BetterMemory更好记忆 是Android移动端使用 Material you 主题设计的背英语单词短句的应用程序 null 2 0 中文文档 # Blackwen/Kotlin-docs-cn 使用mdbook搭建的Kotlin中文文档 HTML 0 0 Blackwen/lolcode-spec-CN LOLCODE语言代码规范以及中文文档 null 0 0 如果你喜欢这些项目就去Github上 点个Star吧 ","date":"30 July 2023","permalink":"/about/","section":"Vinkon's Blog","summary":"我的爱好 # Linux , Android and 阅读","title":"关于我About Me"},{"content":"","date":"30 July 2023","permalink":"/posts/hello-world/","section":"Posts","summary":"","title":"Hello World"},{"content":"","date":"30 July 2023","permalink":"/authors/","section":"Authors","summary":"","title":"Authors"},{"content":"","date":"30 July 2023","permalink":"/authors/bettermemory/","section":"Authors","summary":"","title":"BetterMemory"},{"content":"","date":"30 July 2023","permalink":"/authors/dahi/","section":"Authors","summary":"","title":"dahi"},{"content":"","date":"30 July 2023","permalink":"/authors/inekoxia/","section":"Authors","summary":"","title":"inekoxia"},{"content":"","date":"30 July 2023","permalink":"/authors/ity/","section":"Authors","summary":"","title":"ity"},{"content":"","date":"30 July 2023","permalink":"/authors/qingbingwei/","section":"Authors","summary":"","title":"qingbingwei"},{"content":"","date":"30 July 2023","permalink":"/authors/rene/","section":"Authors","summary":"","title":"rene"},{"content":"","date":"30 July 2023","permalink":"/authors/star/","section":"Authors","summary":"","title":"Star"},{"content":"","date":"30 July 2023","permalink":"/authors/vinkon/","section":"Authors","summary":"","title":"VinKon"},{"content":" 交换友链 # 如需申请友链，请准备以下信息 Warning! 1至4为必填信息! 博客名称 头像链接（或使用邮箱附件与信息一同发送） 博客（个人）简介 博客链接（确保可以正常访问） 您的其他社交平台链接（例如：Github,Facebook等） 发送邮箱到 hwk_12@qq.com\n{ \u0026#34;name\u0026#34;: \u0026#34;Your Name\u0026#34;, \u0026#34;image\u0026#34; : \u0026#34;Your Head\u0026#34;, \u0026#34;bio\u0026#34;: \u0026#34;Your Bio\u0026#34;, \u0026#34;social\u0026#34;: [ { \u0026#34;link\u0026#34;: \u0026#34;Your Blog Link\u0026#34; } ] } 我的链接 # { \u0026#34;name\u0026#34;: \u0026#34;VinKon\u0026#34;, \u0026#34;image\u0026#34; : \u0026#34;https://www.lilkon.cn/img/head.png\u0026#34;, \u0026#34;bio\u0026#34;: \u0026#34;学会学习\u0026#34;, \u0026#34;social\u0026#34;: [ { \u0026#34;link\u0026#34;: \u0026#34;https://lilkon.cn\u0026#34; } ] } ","date":"30 July 2023","permalink":"/links/","section":"Vinkon's Blog","summary":"交换友链 # 如需申请友链，请准备以下信息 Warning!","title":"友链Links"},{"content":"","date":"23 January 2023","permalink":"/tags/linux/","section":"Tags","summary":"","title":"Linux"},{"content":" 環境： # Arch Linux，提前安裝好yay（包管理器） # 步驟： # 打開Konsole（終端） # 1.首先確保你已經安裝了AUR包管理器 # yay --version #查看版本 2.進入你下載的deb包的位置 # Arch Linux默認的下載位置是 /home/username/Downloads\n如果接下來的步驟你不希望在Downloads目錄進行\n請使用mv指令將它移動到別的目錄\nfind -name FilesName #通過名稱搜索文件 mv FliesName Route #將文件移動到指定路徑 3.我們接下來就使用yay安裝debtap # 在終端輸入以下內容\nyay -S debtap 在安裝完成後，我們輸入：\nsu #獲取root權限 然後我們檢查一遍自己所在的位置和文件\npwd #輸出當前位置 ls #查看當前目錄所有文件 如果沒有問題就可以繼續下一步了\n4.使用debtap將deb包轉化 # 首先在終端輸入：\ndebtap -u #更新debtap數據庫（時間較長，請耐心等待，按 Ctrl + c 可以中止） 如果你沒有切換root，請使用sudo\n然後將deb包轉化\ndebtap FilesName #輸入文件名回車後等待轉化 #提示輸入名稱，可以填寫也可以直接回車 :: Enter Packager name (can be left blank): #下一步，提示輸入输入软件包许可证，略過 :: Enter package license (can be left blank, you can enter multiple licenses comma separated): #選擇編輯器，我這裏直接回車 :: If you want to edit .PKGINFO and .INSTALL files (in this order), press (1) For vi (2) For nano (3) For default editor (4) For a custom editor or any other key to continue #然後靜靜等待他轉換 完成後他生成了一個.zst的文件\n我們可以直接使用pacman安裝了\npacman -U FilesName #安裝，如果你沒有root權限，請使用sudo 等待\u0026hellip;\u0026hellip;\u0026hellip;..\n安裝完成後你就可以在菜單打開它了\n","date":"23 January 2023","permalink":"/posts/install-deb-on-archlinux/","section":"Posts","summary":"環境： # Arch Linux，提前安裝好yay（包管理器） # 步驟： # 打開Konsole（終端） # 1.","title":"在Arch Linux上安裝deb格式包"},{"content":" 前言 # 虽然现在大多数发行版都自带了桌面，可以直接用文件管理器进行操作，但是命令是我们必须要会的，有时候命令掌握后可能会比图形界面操作更快。\nChange Directory跳转目录（cd） # 在 Linux 中我们可以通过 cd 来跳转到目录具体用法如下\ncd DirectoryName # 跳转到指定目录 cd ~ # 跳转到用户目录 cd ../ # 返回到上级目录 cd ../.. #返回到上两级目录 List directory contents查看当前目录文件（ls） # 在 Linux 中，如果没有安装图形界面或者其他插件时，我们无法在输入命令的同时看到我们当前目录下的文件，这个时候我们可以使用 ls 命令，来查看当前目录下的所有文件\n# ls 命令十分强大，他有许多参数，这里只说常用的一些 # 更多命令请使用 ls --help 查看 ls DirectoryName #显示当前所有文件和目录（不包括隐藏的文件和目录） ls -a DirectoryName # 显示所有文件及目录 （包括隐藏的文件和目录，及以“.”开头的） ls -l DirectoryName # 除了显示文件名外，还会显示更多详细消息（如时间，拥有者等） # 同时 ls 不仅可以查看目录，也可以查看文件，如： ls -l FileName # 查看文件基本信息 # 可以使用绝对目录或相对目录来查看特定目录下的文件 Make Directory新建目录（mkdir） # 新建目录我们可以使用 mkdir 命令，如下\nmkdir DirectoryName # 这个目录默认是在当前目录下创建，如果要在其他路目录下创建，可以使用绝对路径和相对路径 #如果你要创建目录的路径上一级没有目录，使用 -p 来自动创建没有的 mkdir -p Directory Path #此处如果没有参数则会报错：没有那个目录 # 更多命令请使用 mkdir --help 查看 Touch新建文件 # mkdir 只能新建目录，不能够新建文件，所以我们就需要 touch 来新建文件和对文件进行操作\ntouch FileName # 在当前目录下新建一个文件，后缀需要自己填写 # 可以使用绝对目录或相对目录来在特定目录新建文件 touch -m FileName # 改变文件时间 # 更多命令可以使用 touch --help 查看 Concatenate查看文件内容（cat） # cat 命令可以用来查看文件内容，还有一些更高级的操作（比如制作ISO文件等）。\ncat FileName #查看指定文件内容 # 加上 -n 参数可以输出行数 cat -n FileName # 使用 cat --help 查看更多命令 Remove删除（rm） # ！！！注意，此命令如果使用不当，可能会对你的系统造成伤害，执行前请仔细检查\n在 Linux 下，一切皆文件，而 rm 是用来删除文件和目录的指令，在 root 权限下，你可以用 rm 来删除一切文件，所以如果不能合理 rm ，危险性可想而知。\nrm -i File/Directory # 在删除前逐一询问是否删除 rm -f File/Directory # 直接删除，不询问 # 以上两种只能够用来删除文件，删除目录则需要更改参数 rm -f File/Directory # 此操作会将目录下的文件一键删除 文件一旦通过rm命令删除，则无法恢复，所以必须格外小心地使用该命令！！！\nMove File移动文件（mv） # 在 Linux 下，文件或者目录创建时搞错了位置，我们这个时候可以选择删除或者移动文件到正确位置 ；同时 mv 也可以修改文件或目录名称 。\n# 使用 mv 改名 mv OldFileName NewFileName # 修改文件名 mv OldDirectoryName NewDirectoryName #修改目录名，如果当前路径下有和你修改名称相同的路径，则会移动目录 # 使用 mv 移动文件和目录 mv FileName DirectoryName # 将文件移动到指定目录 mv DirectoryName1 DirectoryName2 # 将 DirectoryName1 移动到 DirectoryName2 ，如果 DirectoryName2 不存在，则会将 DirectoryName1 名称修改为 DirectoryName2，移动前请检查目录是否存在。 Copy File复制文件（cp） # # cp 命令的作用就是把某个目录下的文件复制到另一个目录 # 他有很多的参数 cp -a # 此参数通常在复制目录时使用，它保留链接、文件属性，并复制目录下的所有内容。 cp -d # 复制时保留链接。这里所说的链接相当于 Windows 系统中的快捷方式。 cp -f # 覆盖已经存在的目标文件而不给出提示。 cp -i # 在覆盖前询问用户 cp -r # 若要复制源文件是一个目录文件，此时将复制该目录下所有的子目录和文件。 文本编辑器 # 现在 Linux 上有很多编辑器，如 nano，vi，vim等，我无法说哪个是最好的，所以需要你一个一个的体验找到最适合自己的。\n总结 # 只要能够熟练运用cd，ls，mkdir，rm等命令，在文件操作这一块已经是不会有太大问题的。但是 Linux 的命令还不止这些，以后会持续更新，如果发现上面命令又错误，请及时联系作者\ncd 跳转到指定目录 ls 查看指定目录或指定文件的内容 mkdir 新建目录 touch 新建文件 rm 删除文件或目录 mv 移动文件或目录，修改文件或目录名称 cp 复制文件，创建快捷方式 cat 查看文件内容 2023.1.10（修改）\n2023.3.26（修改)\n","date":"10 January 2023","permalink":"/posts/how-to-manage-files-in-linux/","section":"Posts","summary":"前言 # 虽然现在大多数发行版都自带了桌面，可以直接用文件管理器进行操作，但是命令是我们必须要会的，有时候命令掌握后可能会比图形界面操作更快。","title":"Linux 文件操作"},{"content":" 关于Vim # 首先在了解 Vim（Vi improved） 前我们先了解一下 Vi\n**Vi （visual editor）**编辑器，一般称为 Vi，它是 Linux 和 Unix 系统上最基本的文本编辑器，类似于 Windows 系统下的 NotePad（记事本）编辑器。\n而 Vim 则是 Vi 的加强版，他比 vi 更容易使用，并且 Vi 的命令几乎全部都可以在 vim 上使用。同时 Vim可以在 Windows，Macos，Linux等多种平台上使用，所以现在网上的教程大多是 Vim，而这篇文章也只是介绍 Vim，而不会介绍 Vi。本篇文章只是一个教程，不具备宣传的内容，请在使用前仔细思考，我是否需要使用 Vim？\n基本模式 # 因为 Vim 是在终端运行的应用，所以和一些编辑器不同，他拥有三种模式。\n我们可以在终端输入：\nvim # 通过此命令来进入 Vim vim FileName # 编辑文件 如果你没有安装 Vim，你可以通过以下命令来安装（Linux）：\n# Debian系 sudo apt-get install vim # Arch系 sudo pacman -S vim # 从官方仓库安装 yay -S vim # AUR仓库 命令模式（Command mode） # 在你输入文件名后，Vim 会进入命令模式，在命令模式，所输入的文本不会记录到文件内，而是会作为命令执行\n# 几个常用的命令 i # 进入输入模式 x # 删除当前光标所选中的字符 : # 切换底线命令模式 输入模式（Insert mode） # 进入输入模式后，左下角会显示 INSERT ，这时候就可以输入文本了，和一般的编辑器没什么区别，如果要退出或保存，需要先进入命令模式，在切换到底层命令模式\nEsc # 单击键盘上的Esu键即可退出输入模式，进入到命令模式 # 在命令模式下按 “ : ”，即可切换底层命令模式 底线命令模式（Last line mode） # 在进入到底层命令模式后我们可以对文件进行操作，退出后文件是默认没有保存的，所以我们要在底层命令模式输入命令来进行操作\n# 常用命令（以下命令都已省略前面的“：”） q # 退出（不保存） w # 保存 wq # 保存并退出 w! #强制保存 wq! #强制保存退出 在了解上面命令后我们就可以使用 Vim 来对文件进行简单的删减操作了\n","date":"2 January 2023","permalink":"/posts/how-to-use-vim/","section":"Posts","summary":"关于Vim # 首先在了解 Vim（Vi improved） 前我们先了解一下 Vi","title":"如何使用上古神器 VIM "},{"content":"","date":"2 January 2023","permalink":"/tags/%E7%BC%96%E8%BE%91%E5%99%A8/","section":"Tags","summary":"","title":"编辑器"},{"content":" 关于百年孤独 # 《Cien años de soledad（百年孤独）》，是哥伦比亚作家加西亚·马尔克斯创作的长篇小说，是其代表作，也是拉丁美洲魔幻现实主义文学的代表作，被誉为“再现拉丁美洲历史社会图景的鸿篇巨著”。 作品描写了布恩迪亚家族七代人的传奇故事，以及加勒比海沿岸小镇马孔多的百年兴衰，反映了拉丁美洲一个世纪以来风云变幻的历史。作品融入神话传说、民间故事、宗教典故等神秘因素，巧妙地糅合了现实与虚幻，展现出一个瑰丽的想象世界，成为20世纪重要的经典文学巨著之一。\n以上数据来自百度百科\n\u0026raquo;点我跳转到原文章\n第一部分 # 奥雷里亚诺-布恩迪亚 上校（弟） 第二代 梅尔基亚德斯 吉普赛人（给马孔多带来许多科技） 和王同处一时期 何塞-阿尔卡蒂奥-布恩迪亚 建立马孔多（上校父亲） 第一代 乌尔苏拉-伊瓜兰 何塞-阿尔卡蒂奥-布恩迪亚的妻子（最早的母亲） 第一代 何塞-阿尔卡蒂奥 上校的亲兄弟（乌尔苏拉-伊瓜兰的长子）（哥） 第二代 普鲁邓希奥-阿基拉尔 嘲笑乌尔苏拉-伊瓜兰（被何塞-阿尔卡蒂奥-布恩迪亚杀死） 使何塞-阿尔卡蒂奥-布恩迪亚出走 和王同处一时期 庇拉尔-特尔内拉 和何塞-阿尔卡蒂奥相爱 使何塞-阿尔卡蒂奥出走 第二代 阿玛兰妲 乌尔苏拉-伊瓜兰女儿（妹） 第二代 阿尔卡蒂奥 何塞-阿尔卡蒂奥的儿子 第三代 丽贝卡-布恩迪亚 女儿 第二代 尼卡诺尔·乌略亚 父亲 丽贝卡·蒙铁尔 母亲 第二部分 # 比西塔西翁 给梅尔基亚德斯送食物 第一代 弗朗西斯科 江湖艺人，卖歌赚钱 第一代 第三部分 # 第四部分 # 第五部分 # 第六部分 # 后面的还在努力弄成电子档，因为要修改很多东西，所以大家再多等等\n关于此人物关系 # 关系表由本人阅读后总结得出，如果你有问题，请立刻联系我进行更改。\n现在正在修复\u0026amp;更新，争取让分类更清晰，更正确，更方便阅读。请大家先看前面，后面的家族第几代是后来统计的可能不标准。\nPS：表格人物出场顺序是按照书本顺序来的\n","date":"28 December 2022","permalink":"/posts/one-hundred-years-of-solitude-character-relationship/","section":"Posts","summary":"关于百年孤独 # 《Cien años de soledad（百年孤独）》，是哥伦比亚作家加西亚·马尔克斯创作的长篇小说，是其代表作，也是拉丁美洲魔幻现实主义文学的代表作，被誉为“再现拉丁美洲历史社会图景的鸿篇巨著”。 作品描写了布恩迪亚家族七代人的传奇故事，以及加勒比海沿岸小镇马孔多的百年兴衰，反映了拉丁美洲一个世纪以来风云变幻的历史。作品融入神话传说、民间故事、宗教典故等神秘因素，巧妙地糅合了现实与虚幻，展现出一个瑰丽的想象世界，成为20世纪重要的经典文学巨著之一。","title":"百年孤独人物关系"},{"content":"","date":"28 December 2022","permalink":"/tags/%E9%98%85%E8%AF%BB/","section":"Tags","summary":"","title":"阅读"},{"content":"","date":"1 January 0001","permalink":"/categories/","section":"Categories","summary":"","title":"Categories"},{"content":"","date":"1 January 0001","permalink":"/series/","section":"Series","summary":"","title":"Series"},{"content":"\n\u003c!doctype html\u003e ls的替代品lsd 2023-07-30 友链 页面配置完成\n\u003c!doctype html\u003e ls的替代品lsd 2023-07-29🎉🎉🎉 修改主题为 Blowfish 迁移博客，将原先博客的文章 迁移\n\u0026nbsp;\n","date":"1 January 0001","permalink":"/event/","section":"事件 Event","summary":"","title":"事件 Event"},{"content":"对未来4个月的计划以及一些要做的事情\nAndroid \u0026amp; JetpackCompose # Material You组件学习 # Button\nCard\nButtom App Bar\nTop App Bar\nCheckbox\nChips\nDialogs\nSwitch\nText fields\nRadio button\n...\nKolin # 基础 # 基础回顾一遍，以免忘记\nLambda # 不得不学的\nRust # 常见编程概念 所有权 枚举和模式匹配 常见集合 错误处理 泛型、Trait 和生命周期 ... 设计 # 摸两张海报（\n","date":"1 January 0001","permalink":"/to-do/","section":"待办 TO-Do","summary":"对未来4个月的计划以及一些要做的事情","title":"待办 TO-Do"}]